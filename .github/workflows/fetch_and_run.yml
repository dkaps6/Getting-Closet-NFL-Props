name: Full Slate: Lines + Features + Model

on:
  workflow_dispatch:
    inputs:
      refresh_lines:
        description: "Fetch sportsbook lines (Odds API) â€” set ODDS_API_KEY in repo secrets"
        type: boolean
        default: false
      slate:
        description: "Optional slate label to tag outputs (e.g., week4)"
        required: false
        default: ""

permissions:
  contents: read

concurrency:
  group: nfl-prop-model
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Pinned to avoid the pandas/numpy binary mismatch you saw
          echo "pandas==1.5.3"        >> requirements.txt
          echo "numpy==1.23.5"        >> requirements.txt
          echo "scipy==1.10.1"        >> requirements.txt
          echo "requests==2.31.0"     >> requirements.txt
          echo "pyarrow==10.0.1"      >> requirements.txt
          pip install -r requirements.txt

      - name: Ensure standard folders
        run: |
          mkdir -p inputs outputs scripts .github/workflows

      - name: Optional: fetch sportsbook lines
        if: ${{ github.event.inputs.refresh_lines == 'true' }}
        shell: bash
        run: |
          set -e
          if [ -f scripts/fetch_lines.py ]; then F=scripts/fetch_lines.py; else F=fetch_lines.py; fi
          if [ -z "${ODDS_API_KEY}" ]; then
            echo "ODDS_API_KEY secret is not set. Skipping line fetch."
            exit 0
          fi
          python "$F" --out inputs/sportsbook_lines.csv

      - name: Fetch features (nflverse + NWS)
        shell: bash
        run: |
          set -e
          if [ -f scripts/fetch_features.py ]; then F=scripts/fetch_features.py; else F=fetch_features.py; fi
          python "$F"

      - name: Run model
        run: |
          python run_model.py

      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          cp -f outputs/*.csv artifacts/ 2>/dev/null || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: model_outputs${{ github.event.inputs.slate && format('-{0}', github.event.inputs.slate) || '' }}
          path: artifacts
